on:
  workflow_dispatch:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

name: Tests & Linting

jobs:
  fmt_and_clippy:
    name: Rustfmt + Clippy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: dtolnay/rust-toolchain@nightly
        with:
          components: 'clippy, rustfmt'
      - run: cargo fmt --all -- --check
      - run: cargo clippy --all-targets --all-features -- -D warnings

  test:
    name: Test Suite
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        python-version: ['3.9', '3.10', '3.11', '3.12', '3.13', '3.13t']
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v5
      - uses: dtolnay/rust-toolchain@stable
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - run: pip install --user -U pip wheel
      - run: pip install -r requirements.txt
      - run: maturin build --release --strip --manylinux off -i $pythonLocation/python
        if: ${{ runner.os != 'Windows' }}
      - run: maturin build --release --strip --manylinux off -i $pythonLocation"python.exe"
        if: ${{ runner.os == 'Windows' }}
      - run: pip install rfernet --no-index -f target/wheels
      - run: pytest tests/

  test_manylinux_release_x86_64:
      name: Test manylinux release build (x86_64)
      runs-on: ubuntu-latest
      strategy:
        matrix:
          python-path: ['cp39-cp39', 'cp310-cp310', 'cp311-cp311', 'cp312-cp312', 'cp313-cp313']  # 'cp313-cp313t'
      container: quay.io/pypa/manylinux_2_28_x86_64:latest
      steps:
        - uses: actions/checkout@v5
        - uses: dtolnay/rust-toolchain@stable
          with:
            targets: x86_64-unknown-linux-gnu
        - run: yum makecache && yum -y install libffi-devel openssl-devel
        - run: /opt/python/${{ matrix.python-path }}/bin/python -m venv .venv
        - run: .venv/bin/pip install -U pip wheel
        - run: .venv/bin/pip install -U twine maturin
        - run: .venv/bin/pip install -r requirements.txt
        - run: OPENSSL_STATIC=1 .venv/bin/maturin build --release --strip --manylinux 2_28 -i /opt/python/${{ matrix.python-path }}/bin/python --target x86_64-unknown-linux-gnu
        - run: .venv/bin/pip install rfernet --no-index -f target/wheels
        - run: .venv/bin/pytest

  test_manylinux_release_aarch64:
      name: Test manylinux release build (aarch64)
      runs-on: ubuntu-24.04-arm
      strategy:
        matrix:
          python-path: ['cp39-cp39', 'cp310-cp310', 'cp311-cp311', 'cp312-cp312', 'cp313-cp313']  # 'cp313-cp313t'
      container: quay.io/pypa/manylinux_2_28_aarch64:latest
      steps:
        - uses: actions/checkout@v5
        - uses: dtolnay/rust-toolchain@stable
          with:
            targets: aarch64-unknown-linux-gnu
        - run: yum makecache && yum -y install libffi-devel openssl-devel
        - run: /opt/python/${{ matrix.python-path }}/bin/python -m venv .venv
        - run: .venv/bin/pip install -U pip wheel
        - run: .venv/bin/pip install -U twine maturin
        - run: .venv/bin/pip install -r requirements.txt
        - run: OPENSSL_STATIC=1 .venv/bin/maturin build --release --strip --manylinux 2_28 -i /opt/python/${{ matrix.python-path }}/bin/python --target aarch64-unknown-linux-gnu
        - run: .venv/bin/pip install rfernet --no-index -f target/wheels
        - run: .venv/bin/pytest

  test_release_macos:
    name: Test macOS release build
    strategy:
      matrix:
        python-version: ['3.9', '3.10', '3.11', '3.12', '3.13', '3.13t']
        target-arch: ['aarch64-apple-darwin']
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v5
      - uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target-arch }}
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - run: pip install -U pip wheel twine maturin
      - run: pip install -U twine maturin
      - run: pip install -r requirements.txt
      - run: maturin build --release --strip --manylinux off -i $pythonLocation/python --target ${{ matrix.target-arch }}
      - run: pip install rfernet --no-index -f target/wheels
      - run: pytest
