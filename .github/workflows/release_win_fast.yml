name: Release wheels for win fast
on:
  workflow_dispatch:
  release:
    types: [published, edited]


jobs:
  release_windows_fast:
    name: Build ${{ matrix.os }} Py${{ matrix.python-version }}
    strategy:
      matrix:
        os: [windows-latest]
        python-version: ['3.9', '3.10', '3.11', '3.12', '3.13', '3.13t']
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v5

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache built wheels
        uses: actions/cache@v4
        with:
          path: target/wheels
          key: wheels-rfernet-${{ github.sha }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip wheel twine
          pip install -r requirements.txt

      - name: Get latest release
        id: release
        shell: bash
        run: |
          response=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            https://api.github.com/repos/JiaPai12138/OpenSSL-Win64-Static-Builds/releases/latest)

          if echo "$response" | grep -q "Not Found"; then
            echo "Release not found"
          else
            tag=$(echo "$response" | jq -r .tag_name)
            curl -L -o openssl-static.7z \
            https://github.com/JiaPai12138/OpenSSL-Win64-Static-Builds/releases/download/$tag/openssl-static.7z

            7z x openssl-static.7z -o${{ github.workspace }}/OpenSSL-Win64/
          fi

      - name: Set env for openssl-sys (Windows)
        run: |
          echo "OPENSSL_LIB_DIR=${{ github.workspace }}/OpenSSL-Win64/lib/" >> $env:GITHUB_ENV
          echo "OPENSSL_INCLUDE_DIR=${{ github.workspace }}/OpenSSL-Win64/include" >> $env:GITHUB_ENV

      - name: Build wheels with maturin
        run: |
          maturin build --release --strip -i python --target x86_64-pc-windows-msvc

      - name: Install built package
        run: |
          pip install rfernet --no-index --find-links target/wheels

      - name: Run tests
        run: |
          pytest tests/

  upload_all_wheels:
    name: Collect and upload all wheels
    needs: release_windows_fast
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v5

      - name: Restore cached wheels
        uses: actions/cache@v4
        with:
          path: target/wheels
          key: wheels-rfernet-${{ github.sha }}
          restore-keys: |
            wheels-rfernet-

      - name: Upload all wheels
        uses: actions/upload-artifact@v4
        with:
          name: rfernet-all-windows-wheels
          path: ./target/wheels/*.whl
